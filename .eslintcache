[{"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\index.js":"1","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\App.js":"2","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\homePage.js":"3","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\card.js":"4","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\util\\toggleButton.js":"5","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\Header.js":"6","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\FavoritePage.js":"7","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\CardPage.js":"8","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\action.js":"9","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\Reducer.js":"10"},{"size":137,"mtime":1611245804382,"results":"11","hashOfConfig":"12"},{"size":1637,"mtime":1611512734513,"results":"13","hashOfConfig":"12"},{"size":1268,"mtime":1611479083454,"results":"14","hashOfConfig":"12"},{"size":2518,"mtime":1611479024192,"results":"15","hashOfConfig":"12"},{"size":248,"mtime":1611302951951,"results":"16","hashOfConfig":"12"},{"size":3404,"mtime":1611512419460,"results":"17","hashOfConfig":"12"},{"size":2640,"mtime":1611426975123,"results":"18","hashOfConfig":"12"},{"size":4893,"mtime":1611430959435,"results":"19","hashOfConfig":"12"},{"size":455,"mtime":1611426773203,"results":"20","hashOfConfig":"12"},{"size":1721,"mtime":1611479306646,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"inp1z2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\index.js",[],["46","47"],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\App.js",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\homePage.js",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\card.js",["48"],"import {\r\n    makeStyles,\r\n    IconButton,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport toggleButton from './util/toggleButton';\r\nimport { Favorite, FavoriteBorderOutlined, Add } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        textAlign: 'center',\r\n    },\r\n    media: {\r\n        width: '100%',\r\n        height: 200,\r\n        objectFit: 'cover',\r\n    },\r\n    Card: {},\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst addFavorite = (item) => {\r\n    return { type: 'addFavorite', payloads: item };\r\n};\r\n\r\nconst removeFavorite = (id) => {\r\n    return { type: 'removeFavorite', id };\r\n};\r\nconst AddItem = (item) => {\r\n    return {type:'addItem',payloads:item}\r\n}\r\nconst removeItem = (id) => {\r\n    return {type:'removeItem',id}    \r\n}\r\n\r\nfunction CardComponent({ info, state, dispatch }) {\r\n    const classes = useStyles();\r\n    const [toggle, isToggleOn] = toggleButton();\r\n\r\n    const handleClick = () => {\r\n        //  console.log(toggle)\r\n        if (isToggleOn)\r\n            dispatch(removeFavorite(info.id));\r\n        else\r\n            dispatch(addFavorite(info));\r\n\r\n        toggle();\r\n    };\r\n    const handleAdd =() => {\r\n        dispatch(AddItem(info))\r\n    }\r\n    return (\r\n        <Grid item xs={4} className={classes.root}>\r\n            <Card className={classes.Card}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={info.image}\r\n                    title=\"phone image\"\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"h6\">{info.price}$</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {info.title}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <IconButton color=\"primary\" onClick={() => handleClick()}>\r\n                        {isToggleOn ? <Favorite /> : <FavoriteBorderOutlined />}\r\n                    </IconButton>\r\n                    <IconButton color=\"primary\" onClick={() => handleAdd()}>\r\n                        <Add />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { state };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CardComponent);\r\n","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\util\\toggleButton.js",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\Header.js",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\FavoritePage.js",["49","50","51"],"\r\nimport {\r\n    Grid,\r\n    Card,\r\n    \r\n    CardMedia,\r\n    CardHeader,\r\n    CardActions,\r\n    makeStyles,\r\n    IconButton,\r\n    Box,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { Cancel } from '@material-ui/icons';\r\n\r\nimport {addFavorite,removeFavorite } from './action';\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        width: 100,\r\n        height: 100,\r\n        margin: 20,\r\n        border: `2px solid ${theme.palette.grey[300]}`,\r\n    },\r\n    main: {\r\n        marginTop: 20,\r\n        padding: theme.spacing(3),\r\n    },\r\n    card: {\r\n        padding: '300px',\r\n        position: 'relative',\r\n    },\r\n    action: {\r\n        position: 'absolute',\r\n        top: 50,\r\n        right: 12,\r\n    },\r\n}));\r\n\r\nfunction FavoritePage({ state, dispatch }) {\r\n    console.log(state);\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} className={classes.main}>\r\n                {state.favorite.length ? (\r\n                    state.favorite.map((e) => (\r\n                        <Grid key={e.id} item xs={8} className={classes.card}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    title={e.title}\r\n                                    subheader={e.price + ' $'}\r\n                                    action={\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch(removeFavorite(e));\r\n                                            }}\r\n                                        >\r\n                                            <Cancel />\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n                                <CardMedia\r\n                                    image={e.image}\r\n                                    className={classes.media}\r\n                                />\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                ) : (\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ margin: 'auto' }}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        Favorite is empty\r\n                    </Typography>\r\n                )}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { state };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FavoritePage);\r\n","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\CardPage.js",["52","53","54"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    CardHeader,\r\n    CardActions,\r\n    makeStyles,\r\n    IconButton,\r\n    Typography,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { DeleteForever, ArrowBackIos } from '@material-ui/icons';\r\n\r\nimport {removeItem,removeOneItem,addItem} from './action'\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        width: 100,\r\n        height: 100,\r\n        margin: 20,\r\n        border: `2px solid ${theme.palette.grey[300]}`,\r\n    },\r\n    main: {\r\n        marginTop: 20,\r\n        padding: theme.spacing(3),\r\n    },\r\n    card: {\r\n        padding: '300px',\r\n        position: 'relative',\r\n    },\r\n    action: {\r\n        position: 'absolute',\r\n        top: 50,\r\n        right:12\r\n    },\r\n}));\r\n\r\nfunction CardPage({ state, dispatch }) {\r\n    console.log(state);\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} className={classes.main}>\r\n                {state.card.length ? (\r\n                    state.card.map((e) => (\r\n                        <Grid key={e.id} item xs={8} className={classes.card}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    title={e.title}\r\n                                    subheader={e.price + ' $'}\r\n                                    action={\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch(removeItem(e));\r\n                                            }}\r\n                                        >\r\n                                            <DeleteForever />\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n                                <CardMedia\r\n                                    image={e.image}\r\n                                    className={classes.media}\r\n                                />\r\n\r\n                                <CardActions className={classes.action}>\r\n                                    <Box\r\n                                        display=\"flex\"\r\n                                        flexDirection=\"column\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch(addItem(e));\r\n                                            }}\r\n                                        >\r\n                                            <ArrowBackIos\r\n                                                style={{\r\n                                                    transform: 'rotate(90deg)',\r\n                                                }}\r\n                                            />\r\n                                        </IconButton>\r\n                                        <Box color=\"primary\" fontSize=\"2rem\">\r\n                                            {e.cnt}\r\n                                        </Box>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch(removeOneItem(e));\r\n                                            }}\r\n                                        >\r\n                                            <ArrowBackIos\r\n                                                style={{\r\n                                                    transform: 'rotate(-90deg)',\r\n                                                }}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                ) : (\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ margin: 'auto' }}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        Card is empty\r\n                    </Typography>\r\n                    )}\r\n                <Grid xs={4} >\r\n                    {\r\n                        state.card.length!==0 &&( <Typography variant='h3'>\r\n                        Total:{state.card.reduce((count,e)=>e.price*e.cnt+count,0)}\r\n                        </Typography>)\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { state };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CardPage);\r\n","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\action.js",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\Reducer.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":39,"column":7,"nodeType":"61","messageId":"62","endLine":39,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":8,"column":5,"nodeType":"61","messageId":"62","endLine":8,"endColumn":16},{"ruleId":"59","severity":1,"message":"64","line":11,"column":5,"nodeType":"61","messageId":"62","endLine":11,"endColumn":8},{"ruleId":"59","severity":1,"message":"65","line":17,"column":9,"nodeType":"61","messageId":"62","endLine":17,"endColumn":20},{"ruleId":"59","severity":1,"message":"66","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"67","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"68","line":5,"column":5,"nodeType":"61","messageId":"62","endLine":5,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'removeItem' is assigned a value but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Box' is defined but never used.","'addFavorite' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation"]